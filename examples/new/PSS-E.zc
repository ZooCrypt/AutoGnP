(* 
   IND-CPA Security of the BR93 scheme in the Random
   Oracle Model (ROM) under the assumption of a 
   computationally secure trapdoor permutation.  
*)

(* message length km, random length kr *)
random oracle H1 : (BS_km * BS_kr) -> BS_kh.

random oracle H2 : BS_kh -> (BS_km * BS_kr).

         (* Trapdoor permutation *)
permutation f : (BS_kh * (BS_km * BS_kr)).

        (* Computational assumption *)
adversary A_comp :
  (PKey_f *  (BS_kh * (BS_km * BS_kr))) ->  (BS_kh * (BS_km * BS_kr)).
assumption OW_comp_assm succ
  [ kp <-$ KeyPair_f; r <-$  (BS_kh * (BS_km * BS_kr)); 
    r_A <- A_comp(get_pk(kp),f(get_pk(kp),r)); ] 
    : r_A = r.

             (* IND-CPA Game *)
adversary A_find  : PKey_f -> (BS_km * BS_km).
adversary A_guess : (BS_kh * (BS_km * BS_kr)) -> Bool.

oracle Dec : (BS_kh * (BS_km * BS_kr)) -> BS_km.

bound_adv
  [ b <-$ Bool;
    kp <-$ KeyPair_f;
    r <-$ BS_kr;
    let pk = get_pk(kp);
    let sk = get_sk(kp);
    (m0,m1) <- A_find(pk);
    let mb = b?m1:m0;
    let cs = H1(mb,r);
    let ch2 = H2(cs);
    let mbr = (mb,r);
    let ct = ch2 ++ mbr;
    let cb = f(pk,(cs,ct));
    b'<- A_guess(cb) with
      Dec(c) = {
        c <> cb;
        let st = f_inv(sk,c);
        let s = st#0;
        let t = st#1;
        let t1 = t#0;
        let t2 = t#1;
        let h2s = H2(s);
        let x = (((h2s#0) ++ t1),((h2s#1) ++ t2));
        s = H1(x);
        return x#0;
      };
    ] : b = b'.
    
    guard (13,1,1) ((f_inv(sk,c)#0) <> cs).
    ctxt_ev 1 ( s -> f(pk,(s,ct)) ).
    find (pk0 f_cs_ct -> (c <> f_cs_ct)) 
         (pk, cb) 
         A_finder c.
    
    norm.
    abstract 5 mb (b?m1:m0).
    abstract 6 cs H1(mb,r).
    (* s <> cs *)

    add_test (7,1,1) ((f_inv(get_sk(kp),c)#0) <> cs) AA gc.
    