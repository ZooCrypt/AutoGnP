(* Enter proof script below *)

random oracle H : BS_k1 -> BS_k2.

permutation f : BS_k1.

adversary Afind : PKey_f -> BS_k2 Ë† 2.

adversary Aguess : (PKey_f * (BS_k1*BS_k2)) -> Bool.

(* Computational assumption *)
adversary Acomp : (PKey_f * BS_k1) -> BS_k1.
assumption OW_comp succ
  [ kp <-$ KeyPair_f; m <-$ BS_k1; 
    m' <- Acomp(GetPK_f(kp),f(GetPK_f(kp),m)); ] 
    : m' = m.
    
bound_adv
  [ b <-$ Bool;
    KPair <-$ KeyPair_f;
    r <-$ BS_k1;
    let PKey = GetPK_f(KPair);
    let SKey = GetSK_f(KPair);
    (M0,M1) <- Afind(PKey);
    let Mb = b?M1:M0;
    let Cb = (f(PKey,r),H(r) ++ Mb);
    b'<- Aguess(PKey,Cb);
    ] : b = b'.
    
    abstract 4 r' H(r).
    bad1 4 rr.
    norm. swap r' 1.
    rnd! r' (r' -> (b?M1:M0) ++ r') (r' -> (b?M1:M0) ++ r').
    norm. swap b (6).
    indep.
    
    norm.
    guess A_comp_breaker rr'.
    swap KPair (1). swap r (2).
    abstract 3 OW_comp_args (GetPK_f(KPair),f(GetPK_f(KPair),r)).
    abstract 9 res rr'.
    assumption_computational OW_comp [3 9].
qed.
    