(* Cramer-Shoup from the linear assumption, we follow the matrix assumption paper *)
adversary A1 : G -> (G * G).
adversary A2 : (G * G * G) -> Bool.

assumption_decisional twocasc
  [ a <-$ Fq; r1 <-$ Fq; r2 <-$ Fq;
    let e1 = g^a;
    let e2 = g ^ (a*r1); let e3 = g^ (r1 + a*r2);
    let e4 = g^r2;
  ]
  [ a <-$ Fq; r1 <-$ Fq; r2 <-$ Fq; t <-$ Fq;
    let e1 = g^a;
    let e2 = g ^ (a*r1); let e3 = g^ (r1 + a*r2);
    let e4 = g^t;
  ]
  (a r1 r2 t).

prove
  [ (* secret key a1,a2 *)
    a <-$ Fq;
    let p1 = g^a;
    (m0,m1) <- A1(p1);
    
    b <-$ Bool;
    let mb = (b?m0:m1);
    
    r1 <-$ Fq;
    r2 <-$ Fq;
    (* we can consider k as the key of the KEM *)
    let k = g^r2;
    b' <- A2(p1^r1,g^r1*p1^r2,mb*k);
  ] : b = b'.
  rnorm.
  rswap 4 -2. rswap 5 -2.
  rnorm_unknown.
  rlet_abstract 4 e1 g^a.
  rlet_abstract 5 e2 g^(a*r1).
  rlet_abstract 6 e3 g^(r1)*g^(a*r2).
  rlet_abstract 7 e4 g^(r2).
  assumption_decisional! twocasc -> t.
  bycrush.
  qed.
  print_proof.
  extract "extraction/cpa_matrix_scasc.ec".