(* Cramer-Shoup from the linear assumption, we follow the matrix assumption paper *)
adversary A1 : (G * G) -> (G * G).
adversary A2 : (G * G * G) -> Bool.

assumption_decisional dlin
  [ a1 <-$ Fq; a2 <-$ Fq; r1 <-$ Fq; r2 <-$ Fq;
    let e1 = g^a1;        let e2 = g ^ a2;
    let e3 = g ^ (a1*r1); let e4 = g^ (a2*r2);
    let e5 = g^(r1+r2);
  ]
  [ a1 <-$ Fq; a2 <-$ Fq; r1 <-$ Fq; r2 <-$ Fq;
    t <-$ Fq;
    let e1 = g^a1;        let e2 = g ^ a2;
    let e3 = g ^ (a1*r1); let e4 = g^ (a2*r2);
    let e5 = g^t;
  ]
  (a1 a2 r1 r2 t) ([a1,a2]).

prove
  [ (* secret key a1,a2 *)
    a1 <-$ Fq;
    a2 <-$ Fq;
    let p1 = g^a1;
    let p2 = g^a2;
    (m0,m1) <- A1(p1,p2);
    
    b <-$ Bool;
    let mb = (b?m0:m1);
    
    r1 <-$ Fq;
    r2 <-$ Fq;
    (* we can consider k as the key of the KEM *)
    let k = g^(r1+r2);
    b' <- A2(p1^r1,p2^r2,mb*k);
  ] : b = b'.
  rnorm.
  rswap 5 -2. rswap 6 -2.
  rconv [
    a1 <-$ Fq;
    a2 <-$ Fq;
    r1 <-$ Fq;
    r2 <-$ Fq;
    (m0,m1) <- A1(g ^ a1,g ^ a2);
    b <-$ Bool;
    b' <- A2(g ^ (a1*r1),g ^ (a2*r2), (b?m0:m1)*g^(r1+r2));
  ] : b = b'.
  rlet_abstract 5 e1 g^a1.
  rlet_abstract 6 e2 g^a2.
  rlet_abstract 7 e3 g^(a1*r1).
  rlet_abstract 8 e4 g^(a2*r2).
  rlet_abstract 9 e5 g^(r1+r2).
  assumption_decisional! dlin -> t.
  bycrush.
  qed.
  print_proof.
  extract "extraction/cpa_matrix_dlin.ec".